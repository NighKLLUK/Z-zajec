import numpy as np
#
# a = np.array([1,2,3])
# print(a)
#
# b= np.arange(1,4,1, dtype='float64')
# print(b)
# print(type(b))
# print(b.dtype)
# print(b.shape)
# print(b.ndim)
#
# c= np.array([[0,1],[0,1]])
# print(c)
# print(c.dtype)
# print(c.shape)
# print(c.ndim)

zera = np.zeros((5,5))
print(zera)
jedynki = np.ones((5,5))
print(jedynki)

pusta = np.empty(((2,2)))
print(pusta)
pusta[1][1] = 666
print(pusta)

e=np.arange(1,5,0.5)
print(e)

f= np.linspace(1,2,5, endpoint=False)
print(f)

g=np.indices((5,5))
print(g)
print(g[0][1][1])

h,i =np.mgrid[0:3,0:3]
print(h)
print(i)

j=np.diag([x for x in range(5)], k=-1)
print(j)

k=np.fromiter(range(5), dtype='int32')
print(k)

narcin = b'Marcin'
nar = np.frombuffer(narcin, dtype='S1')
print(nar)

nar_1 = np.array(list(narcin),dtype='S1')
print(nar_1)

nar_2=np.array(list(b'Marcin'))
print(nar_2)
nar_3= np.fromiter(narcin, dtype='S1')
print(nar_3)

l=np.ones((2,2))
m=np.ones((2,2))
n=l+m
print(n)

o=np.arange(18)
print(o)

p=slice(2,7,2)
print(o[p])
p=range(2,7,2)
print(o[p])
print(o[1:])
print(o[2:5])

r= np.arange(25)
print(r)
nat = r.reshape((5,5))
print(nat)
print(nat[1:2])
print(nat[:,1:2])
print(nat[2:5,1:3])

x= np.array([[1,2,3],[4,5,6],[7,8,9],[10,11,12]])
print(x)

rows=np.array([[0,0],[3,3]])
cols=np.array([[0,2],[0,2]])
y=x[rows,cols]  \* przekatne
print(y)
